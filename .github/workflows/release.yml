name: Release Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  release:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore ./Src/MyApp/MyApp.csproj

    - name: Build
      run: dotnet build ./Src/MyApp/MyApp.csproj -c Release --no-restore

    - name: Publish
      run: dotnet publish ./Src/MyApp/MyApp.csproj -c Release -o out

    - name: Zip Artifacts
      run: zip -r myapp.zip ./Src/MyApp/out/*

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "Release ${{ github.ref }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./myapp.zip
        asset_name: myapp.zip
        asset_content_type: application/zip

    - name: Build Docker Image
      run: docker build -t myapp .

    - name: Push Docker Image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker tag myapp cisdev2023/myapp:latest
        docker push cisdev2023/myapp:latest
